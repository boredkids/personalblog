server:
  port: 8081
spring:
  profiles:
    active: dev
  thymeleaf:
    encoding: UTF-8
    cache: false
    mode: HTML
  datasource:
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: ${mysql.url}
      username: ${mysql.username}
      password: ${mysql.password}
      driver-class-name: ${mysql.driver}
      #监控统计拦截的filters
      filters: stat,wall
      #配置初始化大小/最小/最大
      initialSize: 5
      maxActive: 20
      minIdle: 5
      #获取连接等待超时时间
      maxWait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      #支持游标的数据库建议打开
      poolPreparedStatements: false
      maxOpenPreparedStatements: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true


mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: pers.zhao.personalblog.blogdomain.domain

#pagehelper
pagehelper:
  #当该参数设置为 true 时，pageNum<=0 时会查询第一页，pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
  reasonable: true
  #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
  #使用方法可以参考测试代码中的 com.github.pagehelper.test.basic 包下的 ArgumentsMapTest 和 ArgumentsObjTest
  support-methods-arguments: true
  #为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值
  #可以配置 pageNum,pageSize,count,pageSizeZero,reasonable
  #不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
  params: count=countSql

